const template = (function anonymous(data_0
) {
  var frag = document.createDocumentFragment();
  var data = data_0 = typeof data_0 === "undefined" ? {} : data_0;
  var el0 = this["buttonCell"] = document.createElement("span");
  el0.setAttribute("handle", "buttonCell");
  el0.setAttribute("hidden", "");
  var el1 = document.createTextNode("\n  ");
  el0.appendChild(el1);
  var el2 = this["button"] = document.createElement("button","coral-button");
  el2.setAttribute("tracking", "off");
  el2.setAttribute("handle", "button");
  el2.setAttribute("is", "coral-button");
  el2.setAttribute("type", "button");
  el2.setAttribute("variant", "_custom");
  el2.className += " _coral-ClearButton _coral-ClearButton--small _coral-Tags-item-removeButton";
  el2.setAttribute("title", data_0["i18n"]["get"]('Remove'));
  el2.setAttribute("hidden", "");
  el2.setAttribute("tabindex", "-1");
  el2.setAttribute("coral-close", "");
  var el3 = document.createTextNode("\n    ");
  el2.appendChild(el3);
  var el4 = this["buttonLabel"] = document.createElement("coral-button-label");
  el4.setAttribute("handle", "buttonLabel");
  el2.appendChild(el4);
  var el5 = document.createTextNode("\n  ");
  el2.appendChild(el5);
  el0.appendChild(el2);
  var el6 = document.createTextNode("\n");
  el0.appendChild(el6);
  frag.appendChild(el0);
  var el7 = document.createTextNode("\n");
  frag.appendChild(el7);
  data = data_0;
  
  // Don't wait for button MO to pick up the label
  this.button._elements.label = this.buttonLabel;
  // Render close icon
  this.button.insertAdjacentHTML('beforeend', data.Icon._renderSVG('spectrum-css-icon-CrossSmall', ['_coral-UIIcon-CrossSmall']));

  data_0 = data;
  var el9 = document.createTextNode("\n");
  frag.appendChild(el9);
  return frag;
});
export default template;